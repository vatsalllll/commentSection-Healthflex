{"ast":null,"code":"import create from 'zustand';\nconst useCommentDataStore = create(set => ({\n  comments: JSON.parse(localStorage.getItem('comments')) || [],\n  addComment: newComment => set(state => {\n    const updatedComments = [...state.comments, newComment];\n    localStorage.setItem('comments', JSON.stringify(updatedComments));\n    return {\n      comments: updatedComments\n    };\n  }),\n  deleteComment: commentId => set(state => {\n    const filteredComments = state.comments.filter(c => c.id !== commentId);\n    localStorage.setItem('comments', JSON.stringify(filteredComments));\n    return {\n      comments: filteredComments\n    };\n  }),\n  editComment: (commentId, newText) => set(state => {\n    const modifiedComments = state.comments.map(c => c.id === commentId ? {\n      ...c,\n      text: newText\n    } : c);\n    localStorage.setItem('comments', JSON.stringify(modifiedComments));\n    return {\n      comments: modifiedComments\n    };\n  }),\n  addReply: (commentId, reply) => set(state => {\n    const modifiedComments = state.comments.map(c => c.id === commentId ? {\n      ...c,\n      replies: [...(c.replies || []), reply]\n    } : c);\n    localStorage.setItem('comments', JSON.stringify(modifiedComments));\n    return {\n      comments: modifiedComments\n    };\n  }),\n  deleteReply: (commentId, replyId) => set(state => {\n    const modifiedComments = state.comments.map(c => c.id === commentId ? {\n      ...c,\n      replies: (c.replies || []).filter(r => r.id !== replyId)\n    } : c);\n    localStorage.setItem('comments', JSON.stringify(modifiedComments));\n    return {\n      comments: modifiedComments\n    };\n  }),\n  loadComments: () => set(() => {\n    const savedComments = JSON.parse(localStorage.getItem('comments')) || [];\n    return {\n      comments: savedComments\n    };\n  })\n}));\nexport default useCommentDataStore;","map":{"version":3,"names":["create","useCommentDataStore","set","comments","JSON","parse","localStorage","getItem","addComment","newComment","state","updatedComments","setItem","stringify","deleteComment","commentId","filteredComments","filter","c","id","editComment","newText","modifiedComments","map","text","addReply","reply","replies","deleteReply","replyId","r","loadComments","savedComments"],"sources":["C:/Users/VATSAL30/Documents/Projects/commentSectionHealthFlex/src/hooks/commentStore.js"],"sourcesContent":["import create from 'zustand';\n\nconst useCommentDataStore = create((set) => ({\n  comments: JSON.parse(localStorage.getItem('comments')) || [],\n\n  addComment: (newComment) => set((state) => {\n    const updatedComments = [...state.comments, newComment];\n    localStorage.setItem('comments', JSON.stringify(updatedComments));\n    return { comments: updatedComments };\n  }),\n\n  deleteComment: (commentId) => set((state) => {\n    const filteredComments = state.comments.filter(c => c.id !== commentId);\n    localStorage.setItem('comments', JSON.stringify(filteredComments));\n    return { comments: filteredComments };\n  }),\n\n  editComment: (commentId, newText) => set((state) => {\n    const modifiedComments = state.comments.map(c => c.id === commentId ? { ...c, text: newText } : c);\n    localStorage.setItem('comments', JSON.stringify(modifiedComments));\n    return { comments: modifiedComments };\n  }),\n\n  addReply: (commentId, reply) => set((state) => {\n    const modifiedComments = state.comments.map(c =>\n      c.id === commentId\n        ? { ...c, replies: [...(c.replies || []), reply] }\n        : c\n    );\n    localStorage.setItem('comments', JSON.stringify(modifiedComments));\n    return { comments: modifiedComments };\n  }),\n\n  deleteReply: (commentId, replyId) => set((state) => {\n    const modifiedComments = state.comments.map(c =>\n      c.id === commentId\n        ? { ...c, replies: (c.replies || []).filter(r => r.id !== replyId) }\n        : c\n    );\n    localStorage.setItem('comments', JSON.stringify(modifiedComments));\n    return { comments: modifiedComments };\n  }),\n\n  loadComments: () => set(() => {\n    const savedComments = JSON.parse(localStorage.getItem('comments')) || [];\n    return { comments: savedComments };\n  }),\n}));\n\nexport default useCommentDataStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}