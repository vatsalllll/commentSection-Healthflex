{"ast":null,"code":"var _jsxFileName = \"/Users/harshit/Programming/Web Development/comments-section/src/components/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment,\n  onDelete,\n  onEdit\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedText, setEditedText] = useState(comment.text);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    onEdit(comment.id, editedText);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: comment.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \" on \", new Date(comment.date).toLocaleString(), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedText,\n        onChange: e => setEditedText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(comment.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"tJKuncBhfRw+GQDjroo3RATN/xw=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comment","comment","onDelete","onEdit","_s","isEditing","setIsEditing","editedText","setEditedText","text","handleEdit","handleSave","id","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Date","date","toLocaleString","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/harshit/Programming/Web Development/comments-section/src/components/Comment.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Comment = ({ comment, onDelete, onEdit }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedText, setEditedText] = useState(comment.text);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleSave = () => {\n    onEdit(comment.id, editedText);\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"comment\">\n      <strong>{comment.name}</strong> on {new Date(comment.date).toLocaleString()}\n      {isEditing ? (\n        <div>\n          <textarea value={editedText} onChange={(e) => setEditedText(e.target.value)} />\n          <button onClick={handleSave}>Save</button>\n        </div>\n      ) : (\n        <p>{comment.text}</p>\n      )}\n      <button onClick={() => onDelete(comment.id)}>Delete</button>\n      {!isEditing && <button onClick={handleEdit}>Edit</button>}\n    </div>\n  );\n};\n\nexport default Comment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAACI,OAAO,CAACQ,IAAI,CAAC;EAE1D,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBR,MAAM,CAACF,OAAO,CAACW,EAAE,EAAEL,UAAU,CAAC;IAC9BD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBf,OAAA;MAAAe,QAAA,EAASb,OAAO,CAACc;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,QAAI,EAAC,IAAIC,IAAI,CAACnB,OAAO,CAACoB,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC,EAC1EjB,SAAS,gBACRN,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAUwB,KAAK,EAAEhB,UAAW;QAACiB,QAAQ,EAAGC,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/EpB,OAAA;QAAQ4B,OAAO,EAAEhB,UAAW;QAAAG,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,gBAENpB,OAAA;MAAAe,QAAA,EAAIb,OAAO,CAACQ;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACrB,eACDpB,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMzB,QAAQ,CAACD,OAAO,CAACW,EAAE,CAAE;MAAAE,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3D,CAACd,SAAS,iBAAIN,OAAA;MAAQ4B,OAAO,EAAEjB,UAAW;MAAAI,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BIJ,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}