{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Initial state\nconst initialState = {\n  comments: []\n};\n\n// Action types\nconst SET_COMMENTS = 'SET_COMMENTS';\nconst DELETE_COMMENT = 'DELETE_COMMENT';\nconst EDIT_COMMENT = 'EDIT_COMMENT';\nconst DELETE_REPLY = 'DELETE_REPLY';\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(comment => comment.id !== action.payload)\n      };\n    case EDIT_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.map(comment => comment.id === action.payload.id ? {\n          ...comment,\n          text: action.payload.text\n        } : comment)\n      };\n    case DELETE_REPLY:\n      return {\n        ...state,\n        comments: state.comments.map(comment => comment.id === action.payload.commentId ? {\n          ...comment,\n          replies: comment.replies.filter(reply => reply.id !== action.payload.replyId)\n        } : comment)\n      };\n    default:\n      return state;\n  }\n};\n\n// Action creators\nexport const loadComments = () => {\n  return dispatch => {\n    const comments = JSON.parse(localStorage.getItem('comments')) || [];\n    dispatch({\n      type: SET_COMMENTS,\n      payload: comments\n    });\n  };\n};\n\n// Store\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","thunk","composeWithDevTools","initialState","comments","SET_COMMENTS","DELETE_COMMENT","EDIT_COMMENT","DELETE_REPLY","reducer","state","action","type","payload","filter","comment","id","map","text","commentId","replies","reply","replyId","loadComments","dispatch","JSON","parse","localStorage","getItem","store"],"sources":["C:/Users/VATSAL30/Documents/Projects/commentSectionHealthFlex/src/hooks/commentStore.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Initial state\nconst initialState = {\n  comments: [],\n};\n\n// Action types\nconst SET_COMMENTS = 'SET_COMMENTS';\nconst DELETE_COMMENT = 'DELETE_COMMENT';\nconst EDIT_COMMENT = 'EDIT_COMMENT';\nconst DELETE_REPLY = 'DELETE_REPLY';\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COMMENTS:\n      return { ...state, comments: action.payload };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter((comment) => comment.id !== action.payload),\n      };\n    case EDIT_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.map((comment) =>\n          comment.id === action.payload.id ? { ...comment, text: action.payload.text } : comment\n        ),\n      };\n    case DELETE_REPLY:\n      return {\n        ...state,\n        comments: state.comments.map((comment) =>\n          comment.id === action.payload.commentId\n            ? {\n                ...comment,\n                replies: comment.replies.filter((reply) => reply.id !== action.payload.replyId),\n              }\n            : comment\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\n// Action creators\nexport const loadComments = () => {\n  return (dispatch) => {\n    const comments = JSON.parse(localStorage.getItem('comments')) || [];\n    dispatch({ type: SET_COMMENTS, payload: comments });\n  };\n};\n\n// Store\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;;AAE9D;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,cAAc,GAAG,gBAAgB;AACvC,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,YAAY,GAAG,cAAc;;AAEnC;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,YAAY;MACf,OAAO;QAAE,GAAGK,KAAK;QAAEN,QAAQ,EAAEO,MAAM,CAACE;MAAQ,CAAC;IAC/C,KAAKP,cAAc;MACjB,OAAO;QACL,GAAGI,KAAK;QACRN,QAAQ,EAAEM,KAAK,CAACN,QAAQ,CAACU,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAC5E,CAAC;IACH,KAAKN,YAAY;MACf,OAAO;QACL,GAAGG,KAAK;QACRN,QAAQ,EAAEM,KAAK,CAACN,QAAQ,CAACa,GAAG,CAAEF,OAAO,IACnCA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAG;UAAE,GAAGD,OAAO;UAAEG,IAAI,EAAEP,MAAM,CAACE,OAAO,CAACK;QAAK,CAAC,GAAGH,OACjF;MACF,CAAC;IACH,KAAKP,YAAY;MACf,OAAO;QACL,GAAGE,KAAK;QACRN,QAAQ,EAAEM,KAAK,CAACN,QAAQ,CAACa,GAAG,CAAEF,OAAO,IACnCA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACM,SAAS,GACnC;UACE,GAAGJ,OAAO;UACVK,OAAO,EAAEL,OAAO,CAACK,OAAO,CAACN,MAAM,CAAEO,KAAK,IAAKA,KAAK,CAACL,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACS,OAAO;QAChF,CAAC,GACDP,OACN;MACF,CAAC;IACH;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAQC,QAAQ,IAAK;IACnB,MAAMpB,QAAQ,GAAGqB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACnEJ,QAAQ,CAAC;MAAEZ,IAAI,EAAEP,YAAY;MAAEQ,OAAO,EAAET;IAAS,CAAC,CAAC;EACrD,CAAC;AACH,CAAC;;AAED;AACA,MAAMyB,KAAK,GAAG9B,WAAW,CAACU,OAAO,EAAEP,mBAAmB,CAACF,eAAe,CAACC,KAAK,CAAC,CAAC,CAAC;AAE/E,eAAe4B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}