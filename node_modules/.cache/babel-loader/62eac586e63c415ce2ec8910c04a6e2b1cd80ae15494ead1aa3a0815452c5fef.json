{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VATSAL30\\\\Documents\\\\Projects\\\\commentSectionHealthFlex\\\\src\\\\components\\\\CommentForm\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useCommentStore from '../../hooks/commentStore';\nimport './CommentForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  parentId\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const addComment = useCommentStore(state => state.addComment);\n  const addReply = useCommentStore(state => state.addReply);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && text) {\n      const newComment = {\n        id: Date.now(),\n        name,\n        text,\n        date: new Date().toISOString(),\n        replies: []\n      };\n      if (parentId) {\n        addReply(parentId, newComment);\n      } else {\n        addComment(newComment);\n      }\n      setName('');\n      setText('');\n    } else {\n      alert('Please enter both name and comment.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"comment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Your Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Your Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"jp/V5eViKOHild41f/mOZCx36ig=\", false, function () {\n  return [useCommentStore, useCommentStore];\n});\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","useCommentStore","jsxDEV","_jsxDEV","CommentForm","parentId","_s","name","setName","text","setText","addComment","state","addReply","handleSubmit","e","preventDefault","newComment","id","Date","now","date","toISOString","replies","alert","className","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VATSAL30/Documents/Projects/commentSectionHealthFlex/src/components/CommentForm/CommentForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useCommentStore from '../../hooks/commentStore';\nimport './CommentForm.css';\n\nconst CommentForm = ({ parentId }) => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const addComment = useCommentStore((state) => state.addComment);\n  const addReply = useCommentStore((state) => state.addReply);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name && text) {\n      const newComment = {\n        id: Date.now(),\n        name,\n        text,\n        date: new Date().toISOString(),\n        replies: []\n      };\n      if (parentId) {\n        addReply(parentId, newComment);\n      } else {\n        addComment(newComment);\n      }\n      setName('');\n      setText('');\n    } else {\n      alert('Please enter both name and comment.');\n    }\n  };\n\n  return (\n    <form className=\"comment-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Your Name\"\n      />\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        placeholder=\"Your Comment\"\n      ></textarea>\n      <button type=\"submit\">Add Comment</button>\n    </form>\n  );\n};\n\nexport default CommentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMW,UAAU,GAAGV,eAAe,CAAEW,KAAK,IAAKA,KAAK,CAACD,UAAU,CAAC;EAC/D,MAAME,QAAQ,GAAGZ,eAAe,CAAEW,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAE3D,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIT,IAAI,IAAIE,IAAI,EAAE;MAChB,MAAMQ,UAAU,GAAG;QACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdb,IAAI;QACJE,IAAI;QACJY,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;QAC9BC,OAAO,EAAE;MACX,CAAC;MACD,IAAIlB,QAAQ,EAAE;QACZQ,QAAQ,CAACR,QAAQ,EAAEY,UAAU,CAAC;MAChC,CAAC,MAAM;QACLN,UAAU,CAACM,UAAU,CAAC;MACxB;MACAT,OAAO,CAAC,EAAE,CAAC;MACXE,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAM;MACLc,KAAK,CAAC,qCAAqC,CAAC;IAC9C;EACF,CAAC;EAED,oBACErB,OAAA;IAAMsB,SAAS,EAAC,cAAc;IAACC,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBACpDxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,IAAK;MACZuB,QAAQ,EAAGf,CAAC,IAAKP,OAAO,CAACO,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFjC,OAAA;MACE0B,KAAK,EAAEpB,IAAK;MACZqB,QAAQ,EAAGf,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACZjC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC9B,EAAA,CA5CIF,WAAW;EAAA,QAGIH,eAAe,EACjBA,eAAe;AAAA;AAAAoC,EAAA,GAJ5BjC,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}